{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\n/**\r\n * Allows child elements to be transitioned in and out.\r\n *\r\n * Demos:\r\n *\r\n * - [Transitions](https://mui.com/base-ui/react-transitions/#hooks)\r\n *\r\n * API:\r\n *\r\n * - [useTransitionTrigger API](https://mui.com/base-ui/react-transitions/hooks-api/#use-transition-trigger)\r\n */\nexport function useTransitionTrigger(requestEnter) {\n  const [state, dispatch] = React.useReducer(transitionStateReducer, {\n    elementExited: !requestEnter,\n    inProgress: false\n  });\n  const hasTransition = React.useRef(false);\n  const handleEntering = React.useCallback(() => {\n    dispatch('entering');\n  }, []);\n  const handleEntered = React.useCallback(() => {\n    dispatch('entered');\n  }, []);\n  const handleExiting = React.useCallback(() => {\n    dispatch('exiting');\n  }, []);\n  const handleExited = React.useCallback(() => {\n    dispatch('exited');\n  }, []);\n  React.useEffect(() => {\n    if (!hasTransition.current) {\n      if (requestEnter) {\n        dispatch('entered');\n      } else {\n        dispatch('exited');\n      }\n    }\n  }, [requestEnter]);\n  const registerTransition = React.useCallback(() => {\n    hasTransition.current = true;\n    return () => {\n      hasTransition.current = false;\n    };\n  }, []);\n  const contextValue = React.useMemo(() => ({\n    requestedEnter: requestEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExiting: handleExiting,\n    onExited: handleExited,\n    registerTransition,\n    hasExited: state.elementExited\n  }), [handleEntering, handleEntered, handleExiting, handleExited, requestEnter, registerTransition, state.elementExited]);\n  return {\n    contextValue,\n    hasExited: state.elementExited,\n    transitionInProgress: state.inProgress\n  };\n}\nfunction transitionStateReducer(_, action) {\n  switch (action) {\n    case 'entering':\n      return {\n        elementExited: false,\n        inProgress: true\n      };\n    case 'entered':\n      return {\n        elementExited: false,\n        inProgress: false\n      };\n    case 'exiting':\n      return {\n        elementExited: false,\n        inProgress: true\n      };\n    case 'exited':\n      return {\n        elementExited: true,\n        inProgress: false\n      };\n    default:\n      throw new Error(`Unhandled action: ${action}`);\n  }\n}","map":{"version":3,"names":["React","useTransitionTrigger","requestEnter","state","dispatch","useReducer","transitionStateReducer","elementExited","inProgress","hasTransition","useRef","handleEntering","useCallback","handleEntered","handleExiting","handleExited","useEffect","current","registerTransition","contextValue","useMemo","requestedEnter","onEntering","onEntered","onExiting","onExited","hasExited","transitionInProgress","_","action","Error"],"sources":["C:/Users/naism/OneDrive/Bureau/Projet_HTML/Projet_HTML_Nais_Calame_Ngo/Projet_HTML_Nais_Calame_Ngo/WebProjectReact/my-app/node_modules/@mui/base/useTransition/useTransitionTrigger.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\n/**\r\n * Allows child elements to be transitioned in and out.\r\n *\r\n * Demos:\r\n *\r\n * - [Transitions](https://mui.com/base-ui/react-transitions/#hooks)\r\n *\r\n * API:\r\n *\r\n * - [useTransitionTrigger API](https://mui.com/base-ui/react-transitions/hooks-api/#use-transition-trigger)\r\n */\r\nexport function useTransitionTrigger(requestEnter) {\r\n  const [state, dispatch] = React.useReducer(transitionStateReducer, {\r\n    elementExited: !requestEnter,\r\n    inProgress: false\r\n  });\r\n  const hasTransition = React.useRef(false);\r\n  const handleEntering = React.useCallback(() => {\r\n    dispatch('entering');\r\n  }, []);\r\n  const handleEntered = React.useCallback(() => {\r\n    dispatch('entered');\r\n  }, []);\r\n  const handleExiting = React.useCallback(() => {\r\n    dispatch('exiting');\r\n  }, []);\r\n  const handleExited = React.useCallback(() => {\r\n    dispatch('exited');\r\n  }, []);\r\n  React.useEffect(() => {\r\n    if (!hasTransition.current) {\r\n      if (requestEnter) {\r\n        dispatch('entered');\r\n      } else {\r\n        dispatch('exited');\r\n      }\r\n    }\r\n  }, [requestEnter]);\r\n  const registerTransition = React.useCallback(() => {\r\n    hasTransition.current = true;\r\n    return () => {\r\n      hasTransition.current = false;\r\n    };\r\n  }, []);\r\n  const contextValue = React.useMemo(() => ({\r\n    requestedEnter: requestEnter,\r\n    onEntering: handleEntering,\r\n    onEntered: handleEntered,\r\n    onExiting: handleExiting,\r\n    onExited: handleExited,\r\n    registerTransition,\r\n    hasExited: state.elementExited\r\n  }), [handleEntering, handleEntered, handleExiting, handleExited, requestEnter, registerTransition, state.elementExited]);\r\n  return {\r\n    contextValue,\r\n    hasExited: state.elementExited,\r\n    transitionInProgress: state.inProgress\r\n  };\r\n}\r\nfunction transitionStateReducer(_, action) {\r\n  switch (action) {\r\n    case 'entering':\r\n      return {\r\n        elementExited: false,\r\n        inProgress: true\r\n      };\r\n    case 'entered':\r\n      return {\r\n        elementExited: false,\r\n        inProgress: false\r\n      };\r\n    case 'exiting':\r\n      return {\r\n        elementExited: false,\r\n        inProgress: true\r\n      };\r\n    case 'exited':\r\n      return {\r\n        elementExited: true,\r\n        inProgress: false\r\n      };\r\n    default:\r\n      throw new Error(`Unhandled action: ${action}`);\r\n  }\r\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,YAAY,EAAE;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,KAAK,CAACK,UAAU,CAACC,sBAAsB,EAAE;IACjEC,aAAa,EAAE,CAACL,YAAY;IAC5BM,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGT,KAAK,CAACU,MAAM,CAAC,KAAK,CAAC;EACzC,MAAMC,cAAc,GAAGX,KAAK,CAACY,WAAW,CAAC,MAAM;IAC7CR,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMS,aAAa,GAAGb,KAAK,CAACY,WAAW,CAAC,MAAM;IAC5CR,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMU,aAAa,GAAGd,KAAK,CAACY,WAAW,CAAC,MAAM;IAC5CR,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMW,YAAY,GAAGf,KAAK,CAACY,WAAW,CAAC,MAAM;IAC3CR,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EACNJ,KAAK,CAACgB,SAAS,CAAC,MAAM;IACpB,IAAI,CAACP,aAAa,CAACQ,OAAO,EAAE;MAC1B,IAAIf,YAAY,EAAE;QAChBE,QAAQ,CAAC,SAAS,CAAC;MACrB,CAAC,MAAM;QACLA,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF;EACF,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAClB,MAAMgB,kBAAkB,GAAGlB,KAAK,CAACY,WAAW,CAAC,MAAM;IACjDH,aAAa,CAACQ,OAAO,GAAG,IAAI;IAC5B,OAAO,MAAM;MACXR,aAAa,CAACQ,OAAO,GAAG,KAAK;IAC/B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,MAAME,YAAY,GAAGnB,KAAK,CAACoB,OAAO,CAAC,OAAO;IACxCC,cAAc,EAAEnB,YAAY;IAC5BoB,UAAU,EAAEX,cAAc;IAC1BY,SAAS,EAAEV,aAAa;IACxBW,SAAS,EAAEV,aAAa;IACxBW,QAAQ,EAAEV,YAAY;IACtBG,kBAAkB;IAClBQ,SAAS,EAAEvB,KAAK,CAACI;EACnB,CAAC,CAAC,EAAE,CAACI,cAAc,EAAEE,aAAa,EAAEC,aAAa,EAAEC,YAAY,EAAEb,YAAY,EAAEgB,kBAAkB,EAAEf,KAAK,CAACI,aAAa,CAAC,CAAC;EACxH,OAAO;IACLY,YAAY;IACZO,SAAS,EAAEvB,KAAK,CAACI,aAAa;IAC9BoB,oBAAoB,EAAExB,KAAK,CAACK;EAC9B,CAAC;AACH;AACA,SAASF,sBAAsBA,CAACsB,CAAC,EAAEC,MAAM,EAAE;EACzC,QAAQA,MAAM;IACZ,KAAK,UAAU;MACb,OAAO;QACLtB,aAAa,EAAE,KAAK;QACpBC,UAAU,EAAE;MACd,CAAC;IACH,KAAK,SAAS;MACZ,OAAO;QACLD,aAAa,EAAE,KAAK;QACpBC,UAAU,EAAE;MACd,CAAC;IACH,KAAK,SAAS;MACZ,OAAO;QACLD,aAAa,EAAE,KAAK;QACpBC,UAAU,EAAE;MACd,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACLD,aAAa,EAAE,IAAI;QACnBC,UAAU,EAAE;MACd,CAAC;IACH;MACE,MAAM,IAAIsB,KAAK,CAAE,qBAAoBD,MAAO,EAAC,CAAC;EAClD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}